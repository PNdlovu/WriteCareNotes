# WriteCareNotes - High-Availability Load Balancer Configuration
# Nginx Configuration for 3 Application Instances

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr response_time: $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # ===================================================================
    # UPSTREAM - Application Instances (Round-Robin Load Balancing)
    # ===================================================================
    
    upstream writecarenotes_backend {
        # Load balancing method: least_conn = least connections
        least_conn;
        
        # Application instance 1
        server app-1:3001 max_fails=3 fail_timeout=30s weight=1;
        
        # Application instance 2
        server app-2:3001 max_fails=3 fail_timeout=30s weight=1;
        
        # Application instance 3
        server app-3:3001 max_fails=3 fail_timeout=30s weight=1;
        
        # Backup instance (optional - uncomment if you have a 4th instance)
        # server app-4:3001 backup;
        
        # Keep-alive connections to upstream
        keepalive 32;
    }

    # ===================================================================
    # HEALTH CHECK UPSTREAM (Direct health check, no load balancing)
    # ===================================================================
    
    upstream health_check {
        server app-1:3001;
    }

    # ===================================================================
    # HTTP SERVER (Port 80 - Redirect to HTTPS)
    # ===================================================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Health check endpoint (for load balancer)
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ===================================================================
    # HTTPS SERVER (Port 443 - Main Application)
    # ===================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name writecarenotes.com www.writecarenotes.com;

        # SSL/TLS Configuration
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # ===================================================================
        # LOCATION: API Endpoints
        # ===================================================================
        
        location /api/ {
            # Proxy to application backend
            proxy_pass http://writecarenotes_backend;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Proxy timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
        }

        # ===================================================================
        # LOCATION: Health Check (Direct to single instance)
        # ===================================================================
        
        location /api/health {
            access_log off;
            proxy_pass http://health_check/api/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # ===================================================================
        # LOCATION: WebSocket Support (Socket.IO)
        # ===================================================================
        
        location /socket.io/ {
            proxy_pass http://writecarenotes_backend;
            
            # WebSocket headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # ===================================================================
        # LOCATION: Static Files (if served by Node.js)
        # ===================================================================
        
        location /uploads/ {
            proxy_pass http://writecarenotes_backend;
            proxy_set_header Host $host;
            
            # Cache static files
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # ===================================================================
        # LOCATION: Frontend (if applicable)
        # ===================================================================
        
        location / {
            # Proxy to application backend
            proxy_pass http://writecarenotes_backend;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ===================================================================
        # LOCATION: Monitoring Endpoints (Prometheus, Grafana)
        # ===================================================================
        
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ===================================================================
        # ERROR PAGES
        # ===================================================================
        
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
