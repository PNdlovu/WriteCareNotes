apiVersion: v1
kind: Namespace
metadata:
  name: writecare-connect
  labels:
    name: writecare-connect
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: writecare-config
  namespace: writecare-connect
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
  DB_HOST: "writecare-postgres-service"
  DB_PORT: "5432"
  DB_NAME: "writecarenotes"
  DB_USERNAME: "writecare"
  DB_SSL: "true"
  DB_MAX_CONNECTIONS: "20"
  REDIS_HOST: "writecare-redis-service"
  REDIS_PORT: "6379"
  EMAIL_PROVIDER: "smtp"
  SMS_PROVIDER: "twilio"
  WEBRTC_PROVIDER: "daily"
  STORAGE_PROVIDER: "azure"
  CORS_ORIGIN: "https://writecarenotes.com,https://app.writecarenotes.com"

---
apiVersion: v1
kind: Secret
metadata:
  name: writecare-secrets
  namespace: writecare-connect
type: Opaque
stringData:
  DB_PASSWORD: "your-secure-db-password"
  REDIS_PASSWORD: "your-secure-redis-password"
  JWT_SECRET: "your-256-bit-jwt-secret"
  OPENAI_API_KEY: "your-openai-api-key"
  AZURE_OPENAI_API_KEY: "your-azure-openai-key"
  AZURE_OPENAI_ENDPOINT: "https://your-resource.openai.azure.com/"
  DAILY_API_KEY: "your-daily-api-key"
  TWILIO_ACCOUNT_SID: "your-twilio-sid"
  TWILIO_AUTH_TOKEN: "your-twilio-token"
  TWILIO_FROM_NUMBER: "your-twilio-number"
  SMTP_HOST: "smtp.gmail.com"
  SMTP_USERNAME: "your-smtp-username"
  SMTP_PASSWORD: "your-smtp-password"
  AZURE_STORAGE_CONNECTION_STRING: "your-azure-storage-connection"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: writecare-uploads-pvc
  namespace: writecare-connect
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: writecare-logs-pvc
  namespace: writecare-connect
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: writecare-app
  namespace: writecare-connect
  labels:
    app: writecare-app
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: writecare-app
  template:
    metadata:
      labels:
        app: writecare-app
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: writecare-app
        image: writecare/connect:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: writecare-config
        - secretRef:
            name: writecare-secrets
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: writecare-uploads-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: writecare-logs-pvc
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: writecare-app-service
  namespace: writecare-connect
  labels:
    app: writecare-app
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: writecare-app

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: writecare-postgres
  namespace: writecare-connect
  labels:
    app: writecare-postgres
spec:
  serviceName: writecare-postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: writecare-postgres
  template:
    metadata:
      labels:
        app: writecare-postgres
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - name: postgres
          containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: writecare-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: writecare-config
              key: DB_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: writecare-secrets
              key: DB_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - writecare
            - -d
            - writecarenotes
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - writecare
            - -d
            - writecarenotes
          initialDelaySeconds: 10
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: managed-premium
      resources:
        requests:
          storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: writecare-postgres-service
  namespace: writecare-connect
  labels:
    app: writecare-postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgres
    protocol: TCP
    name: postgres
  selector:
    app: writecare-postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: writecare-redis
  namespace: writecare-connect
  labels:
    app: writecare-redis
spec:
  serviceName: writecare-redis-service
  replicas: 1
  selector:
    matchLabels:
      app: writecare-redis
  template:
    metadata:
      labels:
        app: writecare-redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - name: redis
          containerPort: 6379
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: writecare-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 10
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: managed-premium
      resources:
        requests:
          storage: 20Gi

---
apiVersion: v1
kind: Service
metadata:
  name: writecare-redis-service
  namespace: writecare-connect
  labels:
    app: writecare-redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app: writecare-redis

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: writecare-ingress
  namespace: writecare-connect
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  tls:
  - hosts:
    - api.writecarenotes.com
    secretName: writecare-tls-cert
  rules:
  - host: api.writecarenotes.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: writecare-app-service
            port:
              number: 3000

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: writecare-app-hpa
  namespace: writecare-connect
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: writecare-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: writecare-app-pdb
  namespace: writecare-connect
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: writecare-app

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: writecare-service-account
  namespace: writecare-connect
  annotations:
    azure.workload.identity/client-id: "your-managed-identity-client-id"

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: writecare-network-policy
  namespace: writecare-connect
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: nginx-ingress
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  - to:
    - podSelector:
        matchLabels:
          app: writecare-postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: writecare-redis
    ports:
    - protocol: TCP
      port: 6379