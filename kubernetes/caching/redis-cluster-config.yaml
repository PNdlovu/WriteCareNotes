# Redis Cluster Configuration for WriteCareNotes Healthcare Distributed Caching
# Provides high-performance distributed caching with healthcare-specific optimizations

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: caching
data:
  redis.conf: |
    # Redis cluster configuration for healthcare caching
    port 6379
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 15000
    cluster-announce-ip ${POD_IP}
    cluster-announce-port 6379
    cluster-announce-bus-port 16379
    
    # Memory and persistence settings
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    
    # Healthcare-specific optimizations
    timeout 300
    tcp-keepalive 60
    tcp-backlog 511
    
    # Security settings
    requirepass ${REDIS_PASSWORD}
    masterauth ${REDIS_PASSWORD}
    
    # Logging
    loglevel notice
    logfile /var/log/redis/redis.log
    
    # Performance tuning
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    
    # Healthcare data protection
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    
    # Replication settings
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Latency monitoring
    latency-monitor-threshold 100

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: caching
spec:
  serviceName: redis-cluster-headless
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 4Gi
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        - name: redis-data
          mountPath: /data
        - name: redis-logs
          mountPath: /var/log/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config
        configMap:
          name: redis-cluster-config
      - name: redis-logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: gp2

---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-headless
  namespace: caching
spec:
  clusterIP: None
  ports:
  - name: client
    port: 6379
    targetPort: 6379
  - name: gossip
    port: 16379
    targetPort: 16379
  selector:
    app: redis-cluster

---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: caching
spec:
  ports:
  - name: client
    port: 6379
    targetPort: 6379
  selector:
    app: redis-cluster

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: caching
type: Opaque
data:
  password: V3JpdGVDYXJlTm90ZXNSZWRpczIwMjU=

---
# Redis Cluster Initialization Job
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: caching
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: redis-cluster-init
        image: redis:7.0-alpine
        command:
        - /bin/sh
        - -c
        - |
          # Wait for all Redis pods to be ready
          sleep 30
          
          # Get Redis pod IPs
          REDIS_NODES=""
          for i in $(seq 0 5); do
            IP=$(nslookup redis-cluster-$i.redis-cluster-headless.caching.svc.cluster.local | grep Address | tail -1 | awk '{print $2}')
            REDIS_NODES="$REDIS_NODES $IP:6379"
          done
          
          # Create Redis cluster
          redis-cli -a $REDIS_PASSWORD --cluster create $REDIS_NODES --cluster-replicas 1 --cluster-yes
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password

---
# Redis Cluster Monitor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cluster-monitor
  namespace: caching
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cluster-monitor
  template:
    metadata:
      labels:
        app: redis-cluster-monitor
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://redis-cluster:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-monitor
  namespace: caching
  labels:
    app: redis-cluster-monitor
spec:
  ports:
  - name: metrics
    port: 9121
    targetPort: 9121
  selector:
    app: redis-cluster-monitor