/**
 * @fileoverview Family Engagement Portal Component
 * @module FamilyEngagementPortal
 * @version 1.0.0
 * @author WriteCareNotes Team
 * @since 2025-01-01
 * 
 * @description Comprehensive family engagement portal providing real-time updates,
 * communication, care plan access, and digital consent management.
 * 
 * @compliance
 * - CQC Regulation 10 - Dignity and respect
 * - CQC Regulation 11 - Need for consent
 * - GDPR and Data Protection Act 2018
 * - Mental Capacity Act 2005
 */

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/Card';
import { Button } from '../ui/Button';
import { Badge } from '../ui/Badge';
import { Alert, AlertDescription } from '../ui/Alert';
import { LoadingSpinner } from '../ui/LoadingSpinner';
import { useToast } from '../hooks/useToast';
import { useFamilyEngagement } from '../hooks/useFamilyEngagement';
import { formatDateTime, formatDate } from '../../utils/dateUtils';
import { 
  Heart, 
  MessageCircle, 
  Video, 
  Calendar, 
  FileText, 
  Camera,
  Bell,
  User,
  Activity,
  Stethoscope,
  Utensils,
  Smile,
  Shield,
  Clock,
  Star,
  Phone,
  Mail,
  Download,
  Eye,
  ThumbsUp,
  MessageSquare
} from 'lucide-react';

interface FamilyEngagementPortalProps {
  familyId: string;
  residentId: string;
  accessLevel: 'primary' | 'secondary' | 'emergency';
}

interface ResidentUpdate {
  id: string;
  type: 'care' | 'medical' | 'activity' | 'meal' | 'social' | 'incident';
  title: string;
  description: string;
  timestamp: Date;
  priority: 'low' | 'medium' | 'high';
  staffMember: string;
  attachments?: string[];
  requiresAcknowledgment?: boolean;
}

interface CareUpdate {
  id: string;
  careDate: Date;
  activities: string[];
  meals: { breakfast: string; lunch: string; dinner: string; snacks: string[] };
  mood: 'excellent' | 'good' | 'fair' | 'concerning';
  socialInteraction: string;
  physicalActivity: string;
  medicalNotes?: string;
  photos?: string[];
  staffNotes: string;
}

interface UpcomingEvent {
  id: string;
  type: 'appointment' | 'activity' | 'visit' | 'therapy' | 'assessment';
  title: string;
  description: string;
  scheduledTime: Date;
  location: string;
  attendees: string[];
  preparation?: string;
}

export const FamilyEngagementPortal: React.FC<FamilyEngagementPortalProps> = ({
  familyId,
  residentId,
  accessLevel
}) => {
  const [activeTab, setActiveTab] = useState<'updates' | 'care' | 'communication' | 'calendar' | 'documents'>('updates');
  const [selectedDate, setSelectedDate] = useState<Date>(new Date());
  const [unreadCount, setUnreadCount] = useState<number>(0);

  const { toast } = useToast();
  const {
    residentProfile,
    recentUpdates,
    careUpdates,
    upcomingEvents,
    unreadMessages,
    documents,
    loading,
    error,
    markAsRead,
    sendMessage,
    requestVideoCall,
    downloadDocument,
    submitFeedback
  } = useFamilyEngagement(familyId, residentId);

  useEffect(() => {
    setUnreadCount(unreadMessages?.length || 0);
  }, [unreadMessages]);

  const getMoodIcon = (mood: string) => {
    switch (mood) {
      case 'excellent': return <Smile className="w-4 h-4 text-green-500" />;
      case 'good': return <Smile className="w-4 h-4 text-blue-500" />;
      case 'fair': return <User className="w-4 h-4 text-yellow-500" />;
      case 'concerning': return <AlertTriangle className="w-4 h-4 text-red-500" />;
      default: return <User className="w-4 h-4 text-gray-500" />;
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return 'border-red-200 bg-red-50';
      case 'medium': return 'border-yellow-200 bg-yellow-50';
      case 'low': return 'border-blue-200 bg-blue-50';
      default: return 'border-gray-200 bg-gray-50';
    }
  };

  if (loading && !residentProfile) {
    return (
      <div className="flex justify-center items-center h-64">
        <LoadingSpinner size="lg" />
        <span className="ml-2">Loading family portal...</span>
      </div>
    );
  }

  if (error) {
    return (
      <Alert variant="destructive">
        <AlertTriangle className="h-4 w-4" />
        <AlertDescription>
          Failed to load family portal: {error}
        </AlertDescription>
      </Alert>
    );
  }

  return (
    <div className="max-w-7xl mx-auto p-6 space-y-6">
      {/* Header with Resident Info */}
      <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center">
              <User className="w-8 h-8 text-gray-600" />
            </div>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                {residentProfile?.firstName} {residentProfile?.lastName}
              </h1>
              <p className="text-gray-600">
                Room {residentProfile?.roomNumber} â€¢ Admitted {formatDate(residentProfile?.admissionDate)}
              </p>
              <div className="flex items-center gap-2 mt-2">
                <Badge variant="outline" className="text-green-600 border-green-200">
                  <Heart className="w-3 h-3 mr-1" />
                  In Good Care
                </Badge>
                {unreadCount > 0 && (
                  <Badge variant="destructive">
                    <Bell className="w-3 h-3 mr-1" />
                    {unreadCount} New Updates
                  </Badge>
                )}
              </div>
            </div>
          </div>
          <div className="flex gap-2">
            <Button variant="outline" onClick={() => requestVideoCall()}>
              <Video className="w-4 h-4 mr-2" />
              Request Video Call
            </Button>
            <Button>
              <MessageCircle className="w-4 h-4 mr-2" />
              Send Message
            </Button>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="border-b border-gray-200">
        <nav className="-mb-px flex space-x-8">
          {[
            { id: 'updates', label: 'Daily Updates', icon: Activity },
            { id: 'care', label: 'Care Details', icon: Stethoscope },
            { id: 'communication', label: 'Messages', icon: MessageCircle, badge: unreadCount },
            { id: 'calendar', label: 'Calendar', icon: Calendar },
            { id: 'documents', label: 'Documents', icon: FileText }
          ].map((tab) => {
            const Icon = tab.icon;
            return (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id as any)}
                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center gap-2 ${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                <Icon className="w-4 h-4" />
                {tab.label}
                {tab.badge && tab.badge > 0 && (
                  <Badge variant="destructive" className="ml-1 px-1 py-0 text-xs">
                    {tab.badge}
                  </Badge>
                )}
              </button>
            );
          })}
        </nav>
      </div>

      {/* Tab Content */}
      <div className="space-y-6">
        {/* Daily Updates Tab */}
        {activeTab === 'updates' && (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Today's Summary */}
            <div className="lg:col-span-2">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Activity className="w-5 h-5 text-blue-500" />
                    Today's Care Summary
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  {careUpdates && careUpdates.length > 0 ? (
                    <div className="space-y-4">
                      {careUpdates.slice(0, 3).map((update) => (
                        <div key={update.id} className="border rounded-lg p-4 hover:shadow-sm transition-shadow">
                          <div className="flex items-center justify-between mb-3">
                            <div className="flex items-center gap-2">
                              {getMoodIcon(update.mood)}
                              <span className="font-semibold">
                                {formatDate(update.careDate)}
                              </span>
                            </div>
                            <Badge variant="outline">
                              Mood: {update.mood}
                            </Badge>
                          </div>
                          
                          <div className="grid grid-cols-2 gap-4 text-sm">
                            <div>
                              <h4 className="font-medium text-gray-900 mb-2">Activities</h4>
                              <ul className="space-y-1">
                                {update.activities.map((activity, idx) => (
                                  <li key={idx} className="text-gray-600 flex items-center gap-2">
                                    <CheckCircle className="w-3 h-3 text-green-500" />
                                    {activity}
                                  </li>
                                ))}
                              </ul>
                            </div>
                            <div>
                              <h4 className="font-medium text-gray-900 mb-2">Meals</h4>
                              <div className="space-y-1 text-gray-600">
                                <p><Utensils className="w-3 h-3 inline mr-1" />Breakfast: {update.meals.breakfast}</p>
                                <p><Utensils className="w-3 h-3 inline mr-1" />Lunch: {update.meals.lunch}</p>
                                <p><Utensils className="w-3 h-3 inline mr-1" />Dinner: {update.meals.dinner}</p>
                              </div>
                            </div>
                          </div>
                          
                          {update.staffNotes && (
                            <div className="mt-3 p-2 bg-blue-50 rounded">
                              <p className="text-sm text-blue-800">
                                <strong>Staff Notes:</strong> {update.staffNotes}
                              </p>
                            </div>
                          )}
                        </div>
                      ))}
                    </div>
                  ) : (
                    <div className="text-center py-8">
                      <Activity className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                      <p className="text-gray-600">No care updates available for today.</p>
                    </div>
                  )}
                </CardContent>
              </Card>
            </div>

            {/* Quick Stats */}
            <div className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">This Week</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Activities Participated</span>
                    <span className="font-semibold">12/14</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Meals Enjoyed</span>
                    <span className="font-semibold">18/21</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Social Interactions</span>
                    <span className="font-semibold">Daily</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-gray-600">Overall Mood</span>
                    <Badge variant="outline" className="text-green-600">
                      <Smile className="w-3 h-3 mr-1" />
                      Good
                    </Badge>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Quick Actions</CardTitle>
                </CardHeader>
                <CardContent className="space-y-2">
                  <Button className="w-full justify-start" variant="outline">
                    <Video className="w-4 h-4 mr-2" />
                    Schedule Video Call
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Calendar className="w-4 h-4 mr-2" />
                    Book Visit
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <MessageCircle className="w-4 h-4 mr-2" />
                    Send Message
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Star className="w-4 h-4 mr-2" />
                    Provide Feedback
                  </Button>
                </CardContent>
              </Card>
            </div>
          </div>
        )}

        {/* Care Details Tab */}
        {activeTab === 'care' && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Care Plan Overview */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Stethoscope className="w-5 h-5 text-blue-500" />
                  Current Care Plan
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <h4 className="font-medium text-gray-900 mb-2">Care Needs</h4>
                      <ul className="space-y-1">
                        <li className="text-gray-600">â€¢ Personal care assistance</li>
                        <li className="text-gray-600">â€¢ Medication management</li>
                        <li className="text-gray-600">â€¢ Mobility support</li>
                        <li className="text-gray-600">â€¢ Social engagement</li>
                      </ul>
                    </div>
                    <div>
                      <h4 className="font-medium text-gray-900 mb-2">Preferences</h4>
                      <ul className="space-y-1">
                        <li className="text-gray-600">â€¢ Morning routine at 7:30 AM</li>
                        <li className="text-gray-600">â€¢ Enjoys classical music</li>
                        <li className="text-gray-600">â€¢ Prefers tea over coffee</li>
                        <li className="text-gray-600">â€¢ Likes garden visits</li>
                      </ul>
                    </div>
                  </div>
                  
                  <div className="border-t pt-4">
                    <h4 className="font-medium text-gray-900 mb-2">Recent Assessments</h4>
                    <div className="space-y-2">
                      <div className="flex justify-between items-center text-sm">
                        <span>Mobility Assessment</span>
                        <Badge variant="outline" className="text-green-600">
                          Stable
                        </Badge>
                      </div>
                      <div className="flex justify-between items-center text-sm">
                        <span>Nutritional Assessment</span>
                        <Badge variant="outline" className="text-blue-600">
                          Good
                        </Badge>
                      </div>
                      <div className="flex justify-between items-center text-sm">
                        <span>Mental Wellbeing</span>
                        <Badge variant="outline" className="text-green-600">
                          Positive
                        </Badge>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Health & Wellbeing */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Heart className="w-5 h-5 text-red-500" />
                  Health & Wellbeing
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center p-3 bg-green-50 rounded-lg">
                      <Activity className="w-6 h-6 text-green-500 mx-auto mb-2" />
                      <p className="text-sm font-medium">Physical Activity</p>
                      <p className="text-xs text-gray-600">Daily walks completed</p>
                    </div>
                    <div className="text-center p-3 bg-blue-50 rounded-lg">
                      <Utensils className="w-6 h-6 text-blue-500 mx-auto mb-2" />
                      <p className="text-sm font-medium">Nutrition</p>
                      <p className="text-xs text-gray-600">Good appetite</p>
                    </div>
                  </div>
                  
                  <div className="border-t pt-4">
                    <h4 className="font-medium text-gray-900 mb-2">Recent Observations</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex items-center gap-2">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Sleeping well through the night</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Engaging well in group activities</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Maintaining good relationships with staff</span>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {/* Communication Tab */}
        {activeTab === 'communication' && (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Message Center */}
            <div className="lg:col-span-2">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <MessageCircle className="w-5 h-5 text-blue-500" />
                    Message Center
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4 max-h-96 overflow-y-auto">
                    {unreadMessages && unreadMessages.length > 0 ? (
                      unreadMessages.map((message) => (
                        <div
                          key={message.id}
                          className="border rounded-lg p-4 hover:shadow-sm transition-shadow"
                        >
                          <div className="flex justify-between items-start mb-2">
                            <div className="flex items-center gap-2">
                              <Badge variant="outline">
                                {message.fromStaff}
                              </Badge>
                              {!message.read && (
                                <Badge variant="destructive" className="text-xs">New</Badge>
                              )}
                            </div>
                            <span className="text-xs text-gray-500">
                              {formatDateTime(message.timestamp)}
                            </span>
                          </div>
                          <h4 className="font-semibold mb-2">{message.subject}</h4>
                          <p className="text-gray-600 text-sm">{message.content}</p>
                          {!message.read && (
                            <Button 
                              size="sm" 
                              variant="outline" 
                              className="mt-2"
                              onClick={() => markAsRead(message.id)}
                            >
                              Mark as Read
                            </Button>
                          )}
                        </div>
                      ))
                    ) : (
                      <div className="text-center py-8">
                        <MessageCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                        <p className="text-gray-600">No messages at this time.</p>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Communication Options */}
            <div className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Contact Care Team</CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <Button className="w-full justify-start">
                    <Phone className="w-4 h-4 mr-2" />
                    Call Care Manager
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Mail className="w-4 h-4 mr-2" />
                    Email Care Team
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Video className="w-4 h-4 mr-2" />
                    Video Call Request
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <MessageSquare className="w-4 h-4 mr-2" />
                    Send Feedback
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Emergency Contact</CardTitle>
                </CardHeader>
                <CardContent>
                  <Alert>
                    <Shield className="h-4 w-4" />
                    <AlertDescription>
                      For emergencies, call the home directly at{' '}
                      <strong className="text-red-600">+44 (0) 123 456 7890</strong>
                    </AlertDescription>
                  </Alert>
                </CardContent>
              </Card>
            </div>
          </div>
        )}

        {/* Calendar Tab */}
        {activeTab === 'calendar' && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Upcoming Events */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Calendar className="w-5 h-5 text-blue-500" />
                  Upcoming Events & Appointments
                </CardTitle>
              </CardHeader>
              <CardContent>
                {upcomingEvents && upcomingEvents.length > 0 ? (
                  <div className="space-y-3">
                    {upcomingEvents.map((event) => (
                      <div key={event.id} className="border rounded-lg p-3 hover:shadow-sm transition-shadow">
                        <div className="flex justify-between items-start mb-2">
                          <div>
                            <h4 className="font-semibold">{event.title}</h4>
                            <p className="text-sm text-gray-600">{event.description}</p>
                          </div>
                          <Badge variant="outline">
                            {event.type}
                          </Badge>
                        </div>
                        <div className="text-sm text-gray-500">
                          <p><Clock className="w-3 h-3 inline mr-1" />{formatDateTime(event.scheduledTime)}</p>
                          <p><User className="w-3 h-3 inline mr-1" />{event.location}</p>
                          {event.attendees.length > 0 && (
                            <p><Users className="w-3 h-3 inline mr-1" />With: {event.attendees.join(', ')}</p>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8">
                    <Calendar className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                    <p className="text-gray-600">No upcoming events scheduled.</p>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Visit Booking */}
            <Card>
              <CardHeader>
                <CardTitle>Schedule a Visit</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Visit Type
                    </label>
                    <select className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">
                      <option>In-person visit</option>
                      <option>Video call</option>
                      <option>Phone call</option>
                      <option>Care review meeting</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Preferred Date
                    </label>
                    <input 
                      type="date" 
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Preferred Time
                    </label>
                    <select className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">
                      <option>Morning (9:00 AM - 12:00 PM)</option>
                      <option>Afternoon (12:00 PM - 5:00 PM)</option>
                      <option>Evening (5:00 PM - 8:00 PM)</option>
                    </select>
                  </div>
                  <Button className="w-full">
                    Request Visit
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {/* Documents Tab */}
        {activeTab === 'documents' && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Available Documents */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <FileText className="w-5 h-5 text-blue-500" />
                  Available Documents
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {documents && documents.map((doc) => (
                    <div key={doc.id} className="flex items-center justify-between p-3 border rounded-lg hover:shadow-sm">
                      <div className="flex items-center gap-3">
                        <FileText className="w-5 h-5 text-blue-500" />
                        <div>
                          <p className="font-medium">{doc.name}</p>
                          <p className="text-sm text-gray-600">
                            {doc.type} â€¢ {formatDate(doc.createdAt)}
                          </p>
                        </div>
                      </div>
                      <div className="flex gap-2">
                        <Button size="sm" variant="outline">
                          <Eye className="w-4 h-4" />
                        </Button>
                        <Button size="sm" variant="outline">
                          <Download className="w-4 h-4" />
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Digital Consent */}
            <Card>
              <CardHeader>
                <CardTitle>Digital Consent & Permissions</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="p-3 border rounded-lg">
                    <h4 className="font-medium mb-2">Photo Sharing Consent</h4>
                    <p className="text-sm text-gray-600 mb-3">
                      Allow care home to share photos of activities and daily life.
                    </p>
                    <div className="flex gap-2">
                      <Button size="sm" variant="outline" className="text-green-600">
                        <ThumbsUp className="w-4 h-4 mr-1" />
                        Granted
                      </Button>
                    </div>
                  </div>
                  
                  <div className="p-3 border rounded-lg">
                    <h4 className="font-medium mb-2">Medical Information Sharing</h4>
                    <p className="text-sm text-gray-600 mb-3">
                      Share relevant medical updates with authorized family members.
                    </p>
                    <div className="flex gap-2">
                      <Button size="sm" variant="outline" className="text-green-600">
                        <ThumbsUp className="w-4 h-4 mr-1" />
                        Granted
                      </Button>
                    </div>
                  </div>
                  
                  <div className="p-3 border rounded-lg">
                    <h4 className="font-medium mb-2">Emergency Contact Authorization</h4>
                    <p className="text-sm text-gray-600 mb-3">
                      Authorize care home to contact you in case of emergencies.
                    </p>
                    <div className="flex gap-2">
                      <Button size="sm" variant="outline" className="text-green-600">
                        <ThumbsUp className="w-4 h-4 mr-1" />
                        Granted
                      </Button>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </div>
    </div>
  );
};