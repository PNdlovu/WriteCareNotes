/**
 * @fileoverview Enterprise Document Management Dashboard Component
 * @module DocumentManagementDashboard
 * @version 1.0.0
 * @author WriteCareNotes Team
 * @since 2025-01-01
 * 
 * @description Advanced document management dashboard with AI-powered analysis,
 * version control, semantic search, and compliance monitoring.
 */

import React, { useState, useEffect } from 'react';
import { 
  Card, 
  CardContent, 
  CardHeader, 
  CardTitle,
  Alert,
  AlertDescription,
  Badge,
  Button,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
  Progress,
  Input
} from '../ui';
import { 
  FileText, 
  Upload, 
  Search, 
  Filter, 
  Download,
  Eye,
  Edit,
  Archive,
  CheckCircle,
  Clock,
  AlertTriangle,
  BarChart3,
  Brain,
  Lock,
  Users,
  TrendingUp
} from 'lucide-react';

interface Document {
  id: string;
  documentId: string;
  documentName: string;
  documentType: string;
  status: 'draft' | 'under_review' | 'approved' | 'published' | 'archived' | 'expired';
  confidentialityLevel: 'public' | 'internal' | 'confidential' | 'restricted';
  version: string;
  author: string;
  lastModified: string;
  fileSize: number;
  qualityScore: number;
  complianceScore: number;
  aiAnalysisComplete: boolean;
}

interface DocumentDashboardData {
  totalDocuments: number;
  activeDocuments: number;
  draftDocuments: number;
  expiredDocuments: number;
  averageQualityScore: number;
  storageUsed: number; // MB
  recentDocuments: Document[];
  analytics: {
    documentsByType: Record<string, number>;
    documentsByStatus: Record<string, number>;
    qualityTrend: number;
    accessActivity: number;
  };
}

export const DocumentManagementDashboard: React.FC = () => {
  const [dashboardData, setDashboardData] = useState<DocumentDashboardData | null>(null);
  const [loading, setLoading] = useState(true);
  const [searchQuery, setSearchQuery] = useState('');
  const [documentFilter, setDocumentFilter] = useState('all');

  useEffect(() => {
    loadDashboardData();
  }, [documentFilter]);

  const loadDashboardData = async () => {
    try {
      setLoading(true);
      // API call would go here
      const mockData: DocumentDashboardData = {
        totalDocuments: 1247,
        activeDocuments: 1156,
        draftDocuments: 67,
        expiredDocuments: 24,
        averageQualityScore: 87,
        storageUsed: 2847, // MB
        recentDocuments: [
          {
            id: '1',
            documentId: 'DOC-20250103-POL-001',
            documentName: 'Safeguarding Policy Update 2025',
            documentType: 'policy',
            status: 'under_review',
            confidentialityLevel: 'internal',
            version: '2.1',
            author: 'Quality Manager',
            lastModified: '2025-01-03T15:30:00Z',
            fileSize: 2.4,
            qualityScore: 92,
            complianceScore: 98,
            aiAnalysisComplete: true
          },
          {
            id: '2',
            documentId: 'DOC-20250102-TRA-002',
            documentName: 'Manual Handling Training Material',
            documentType: 'training_material',
            status: 'published',
            confidentialityLevel: 'internal',
            version: '1.3',
            author: 'Training Coordinator',
            lastModified: '2025-01-02T11:20:00Z',
            fileSize: 5.8,
            qualityScore: 89,
            complianceScore: 95,
            aiAnalysisComplete: true
          }
        ],
        analytics: {
          documentsByType: {
            policy: 145,
            procedure: 298,
            training_material: 187,
            care_plan: 234,
            regulatory_document: 89,
            incident_report: 156,
            contract: 78,
            medical_record: 60
          },
          documentsByStatus: {
            published: 1156,
            draft: 67,
            under_review: 18,
            archived: 6
          },
          qualityTrend: 8, // 8% improvement
          accessActivity: 1247 // daily accesses
        }
      };
      setDashboardData(mockData);
    } catch (error) {
      console.error('Failed to load document dashboard:', error);
    } finally {
      setLoading(false);
    }
  };

  const getStatusBadgeVariant = (status: string) => {
    switch (status) {
      case 'published':
        return 'default';
      case 'approved':
        return 'default';
      case 'under_review':
        return 'secondary';
      case 'draft':
        return 'outline';
      case 'expired':
      case 'archived':
        return 'destructive';
      default:
        return 'outline';
    }
  };

  const getConfidentialityBadgeVariant = (level: string) => {
    switch (level) {
      case 'public':
        return 'outline';
      case 'internal':
        return 'secondary';
      case 'confidential':
        return 'destructive';
      case 'restricted':
        return 'destructive';
      default:
        return 'outline';
    }
  };

  const formatDocumentType = (type: string) => {
    return type.split('_').map(word => 
      word.charAt(0).toUpperCase() + word.slice(1)
    ).join(' ');
  };

  const formatFileSize = (sizeInMB: number) => {
    if (sizeInMB < 1) {
      return `${(sizeInMB * 1024).toFixed(0)} KB`;
    }
    return `${sizeInMB.toFixed(1)} MB`;
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  if (!dashboardData) {
    return (
      <Alert>
        <AlertTriangle className="h-4 w-4" />
        <AlertDescription>
          Failed to load document management dashboard data.
        </AlertDescription>
      </Alert>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Document Management</h1>
          <p className="text-gray-600">AI-powered document lifecycle and compliance management</p>
        </div>
        <div className="flex space-x-2">
          <Button variant="outline">
            <Download className="h-4 w-4 mr-2" />
            Export Analytics
          </Button>
          <Button>
            <Upload className="h-4 w-4 mr-2" />
            Upload Document
          </Button>
        </div>
      </div>

      {/* Expired Documents Alert */}
      {dashboardData.expiredDocuments > 0 && (
        <Alert className="border-red-200 bg-red-50">
          <AlertTriangle className="h-4 w-4 text-red-600" />
          <AlertDescription className="text-red-800">
            <strong>{dashboardData.expiredDocuments} document{dashboardData.expiredDocuments > 1 ? 's' : ''}</strong> have expired and require review.
          </AlertDescription>
        </Alert>
      )}

      {/* Key Metrics */}
      <div className="grid grid-cols-1 md:grid-cols-5 gap-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Total Documents</CardTitle>
            <FileText className="h-4 w-4 text-blue-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{dashboardData.totalDocuments.toLocaleString()}</div>
            <p className="text-xs text-gray-500">Across all types</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Active Documents</CardTitle>
            <CheckCircle className="h-4 w-4 text-green-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{dashboardData.activeDocuments.toLocaleString()}</div>
            <p className="text-xs text-gray-500">Published & current</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Draft Documents</CardTitle>
            <Edit className="h-4 w-4 text-amber-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-amber-600">{dashboardData.draftDocuments}</div>
            <p className="text-xs text-gray-500">In progress</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Quality Score</CardTitle>
            <Brain className="h-4 w-4 text-purple-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-600">{dashboardData.averageQualityScore}%</div>
            <p className="text-xs text-gray-500">
              <TrendingUp className="h-3 w-3 inline mr-1" />
              +{dashboardData.analytics.qualityTrend}% this month
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Storage Used</CardTitle>
            <Archive className="h-4 w-4 text-gray-600" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{(dashboardData.storageUsed / 1024).toFixed(1)} GB</div>
            <p className="text-xs text-gray-500">Of 10 GB allocated</p>
          </CardContent>
        </Card>
      </div>

      {/* Search Bar */}
      <Card>
        <CardContent className="pt-6">
          <div className="flex space-x-2">
            <div className="relative flex-1">
              <Search className="absolute left-2 top-2.5 h-4 w-4 text-gray-400" />
              <Input
                placeholder="Search documents with AI-powered semantic search..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-8"
              />
            </div>
            <Button>
              <Brain className="h-4 w-4 mr-2" />
              AI Search
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Main Content */}
      <Tabs defaultValue="documents" className="space-y-4">
        <TabsList>
          <TabsTrigger value="documents">Document Library</TabsTrigger>
          <TabsTrigger value="analytics">Analytics</TabsTrigger>
          <TabsTrigger value="compliance">Compliance</TabsTrigger>
          <TabsTrigger value="ai-insights">AI Insights</TabsTrigger>
        </TabsList>

        <TabsContent value="documents" className="space-y-4">
          <Card>
            <CardHeader>
              <div className="flex justify-between items-center">
                <CardTitle>Document Library</CardTitle>
                <div className="flex space-x-2">
                  <Select value={documentFilter} onValueChange={setDocumentFilter}>
                    <SelectTrigger className="w-40">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">All Documents</SelectItem>
                      <SelectItem value="draft">Drafts</SelectItem>
                      <SelectItem value="review">Under Review</SelectItem>
                      <SelectItem value="expired">Expired</SelectItem>
                    </SelectContent>
                  </Select>
                  <Button variant="outline" size="sm">
                    <Filter className="h-4 w-4 mr-2" />
                    Advanced Filter
                  </Button>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Document ID</TableHead>
                    <TableHead>Name</TableHead>
                    <TableHead>Type</TableHead>
                    <TableHead>Status</TableHead>
                    <TableHead>Security</TableHead>
                    <TableHead>Version</TableHead>
                    <TableHead>Quality</TableHead>
                    <TableHead>Modified</TableHead>
                    <TableHead>Actions</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {dashboardData.recentDocuments.map((doc) => (
                    <TableRow key={doc.id}>
                      <TableCell className="font-mono text-sm">
                        {doc.documentId}
                      </TableCell>
                      <TableCell>
                        <div>
                          <div className="font-medium">{doc.documentName}</div>
                          <div className="text-xs text-gray-500">
                            {formatFileSize(doc.fileSize)} • {doc.author}
                          </div>
                        </div>
                      </TableCell>
                      <TableCell>{formatDocumentType(doc.documentType)}</TableCell>
                      <TableCell>
                        <Badge variant={getStatusBadgeVariant(doc.status)}>
                          {doc.status.replace('_', ' ').toUpperCase()}
                        </Badge>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center space-x-1">
                          <Lock className="h-3 w-3 text-gray-400" />
                          <Badge variant={getConfidentialityBadgeVariant(doc.confidentialityLevel)} className="text-xs">
                            {doc.confidentialityLevel.toUpperCase()}
                          </Badge>
                        </div>
                      </TableCell>
                      <TableCell>
                        <Badge variant="outline">v{doc.version}</Badge>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center space-x-2">
                          <Progress value={doc.qualityScore} className="w-16 h-2" />
                          <span className="text-xs text-gray-600">{doc.qualityScore}%</span>
                          {doc.aiAnalysisComplete && (
                            <Brain className="h-3 w-3 text-purple-600" />
                          )}
                        </div>
                      </TableCell>
                      <TableCell>
                        <div className="text-sm">{new Date(doc.lastModified).toLocaleDateString()}</div>
                      </TableCell>
                      <TableCell>
                        <div className="flex space-x-1">
                          <Button variant="outline" size="sm">
                            <Eye className="h-3 w-3" />
                          </Button>
                          <Button variant="outline" size="sm">
                            <Edit className="h-3 w-3" />
                          </Button>
                          <Button variant="outline" size="sm">
                            <Download className="h-3 w-3" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Documents by Type</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {Object.entries(dashboardData.analytics.documentsByType).map(([type, count]) => (
                    <div key={type} className="flex justify-between items-center">
                      <span className="text-sm">{formatDocumentType(type)}</span>
                      <div className="flex items-center space-x-2">
                        <Progress 
                          value={(count / dashboardData.totalDocuments) * 100} 
                          className="w-20 h-2"
                        />
                        <Badge variant="outline">{count}</Badge>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Document Status Overview</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {Object.entries(dashboardData.analytics.documentsByStatus).map(([status, count]) => (
                    <div key={status} className="flex justify-between items-center">
                      <span className="text-sm capitalize">{status.replace('_', ' ')}</span>
                      <Badge variant={getStatusBadgeVariant(status)}>{count}</Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="compliance" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Retention Compliance</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center">
                  <div className="text-3xl font-bold text-green-600 mb-2">98%</div>
                  <Progress value={98} className="w-full mb-2" />
                  <p className="text-xs text-gray-600">Documents within retention policy</p>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Access Control</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center">
                  <div className="text-3xl font-bold text-green-600 mb-2">100%</div>
                  <Progress value={100} className="w-full mb-2" />
                  <p className="text-xs text-gray-600">Proper access controls applied</p>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Audit Trail</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center">
                  <div className="text-3xl font-bold text-green-600 mb-2">100%</div>
                  <Progress value={100} className="w-full mb-2" />
                  <p className="text-xs text-gray-600">Complete audit coverage</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="ai-insights" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>AI Document Intelligence</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold mb-3">Content Analysis</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Average Quality Score</span>
                      <Badge variant="default">{dashboardData.averageQualityScore}%</Badge>
                    </div>
                    <div className="flex justify-between">
                      <span>AI Analysis Coverage</span>
                      <Badge variant="default">95%</Badge>
                    </div>
                    <div className="flex justify-between">
                      <span>Compliance Validation</span>
                      <Badge variant="default">98%</Badge>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h4 className="font-semibold mb-3">Automation Metrics</h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>Auto-Classification</span>
                      <Badge variant="default">92%</Badge>
                    </div>
                    <div className="flex justify-between">
                      <span>Content Extraction</span>
                      <Badge variant="default">98%</Badge>
                    </div>
                    <div className="flex justify-between">
                      <span>Smart Indexing</span>
                      <Badge variant="default">96%</Badge>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};