/**
 * @fileoverview British Isles Multi-Jurisdictional Compliance Dashboard
 * @module BritishIslesComplianceDashboard
 * @version 2.0.0
 * @author WriteCareNotes Team
 * @since 2025-01-01
 * 
 * @description Comprehensive compliance dashboard covering ALL British Isles
 * jurisdictions with unified monitoring and jurisdiction-specific requirements.
 * 
 * @jurisdictions
 * - England: CQC (Care Quality Commission)
 * - Scotland: Care Inspectorate Scotland
 * - Wales: CIW (Care Inspectorate Wales)
 * - Northern Ireland: RQIA (Regulation and Quality Improvement Authority)
 * - Jersey: Jersey Care Commission
 * - Guernsey: Committee for Health & Social Care
 * - Isle of Man: Department of Health & Social Care
 */

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/Card';
import { Button } from '../ui/Button';
import { Badge } from '../ui/Badge';
import { Alert, AlertDescription } from '../ui/Alert';
import { LoadingSpinner } from '../ui/LoadingSpinner';
import { useBritishIslesCompliance } from '../../hooks/useBritishIslesCompliance';
import { LineChart, Line, AreaChart, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import { 
  Shield, Award, AlertTriangle, CheckCircle, TrendingUp,
  Eye, FileText, Users, Heart, Zap, Clock, Target,
  Brain, Star, Flag, Bell, Calendar, Download,
  Activity, Stethoscope, UserCheck, Building,
  BarChart3, Globe, Lock, Smartphone, Crown,
  MapPin, Navigation, Compass
} from 'lucide-react';

interface BritishIslesComplianceDashboardProps {
  organizationId: string;
  userRole: string;
}

interface JurisdictionCompliance {
  jurisdiction: string;
  regulatoryBody: string;
  overallScore: number;
  rating: string;
  domainScores: Record<string, number>;
  lastInspection?: Date;
  nextInspection?: Date;
  complianceGaps: string[];
  recommendations: string[];
  culturalRequirements?: Record<string, number>;
}

interface BritishIslesOverview {
  totalJurisdictions: number;
  averageScore: number;
  highestPerforming: string;
  lowestPerforming: string;
  crossJurisdictionalRisks: string[];
  harmonizedRecommendations: string[];
  nextInspections: Array<{ jurisdiction: string; date: Date; daysUntil: number }>;
}

export const BritishIslesComplianceDashboard: React.FC<BritishIslesComplianceDashboardProps> = ({
  organizationId,
  userRole
}) => {
  const [selectedJurisdiction, setSelectedJurisdiction] = useState<string>('overview');
  const [timeframe, setTimeframe] = useState<'week' | 'month' | 'quarter' | 'year'>('month');
  const [showCulturalCompliance, setShowCulturalCompliance] = useState<boolean>(true);

  const {
    britishIslesOverview,
    jurisdictionCompliance,
    complianceTrends,
    regulatoryUpdates,
    crossJurisdictionalAnalysis,
    loading,
    error,
    generateHarmonizedReport,
    scheduleMultiJurisdictionalReview,
    refreshAllCompliance
  } = useBritishIslesCompliance({ tenantId: organizationId, jurisdiction: timeframe });

  const getJurisdictionIcon = (jurisdiction: string) => {
    switch (jurisdiction) {
      case 'england': return <Crown className="w-5 h-5 text-red-500" />;
      case 'scotland': return <Flag className="w-5 h-5 text-blue-500" />;
      case 'wales': return <Flag className="w-5 h-5 text-green-500" />;
      case 'northern_ireland': return <Flag className="w-5 h-5 text-orange-500" />;
      case 'jersey': return <MapPin className="w-5 h-5 text-purple-500" />;
      case 'guernsey': return <MapPin className="w-5 h-5 text-teal-500" />;
      case 'isle_of_man': return <Compass className="w-5 h-5 text-indigo-500" />;
      default: return <Globe className="w-5 h-5 text-gray-500" />;
    }
  };

  const getJurisdictionName = (jurisdiction: string) => {
    switch (jurisdiction) {
      case 'england': return 'England (CQC)';
      case 'scotland': return 'Scotland (Care Inspectorate)';
      case 'wales': return 'Wales (CIW)';
      case 'northern_ireland': return 'Northern Ireland (RQIA)';
      case 'jersey': return 'Jersey (Care Commission)';
      case 'guernsey': return 'Guernsey (Health & Social Care)';
      case 'isle_of_man': return 'Isle of Man (DHSC)';
      default: return jurisdiction;
    }
  };

  const getRatingColor = (rating: string) => {
    const lowerRating = rating.toLowerCase();
    if (lowerRating.includes('outstanding') || lowerRating.includes('excellent')) {
      return 'text-green-600 bg-green-50 border-green-200';
    } else if (lowerRating.includes('good') || lowerRating.includes('very_good')) {
      return 'text-blue-600 bg-blue-50 border-blue-200';
    } else if (lowerRating.includes('requires') || lowerRating.includes('adequate') || lowerRating.includes('satisfactory')) {
      return 'text-yellow-600 bg-yellow-50 border-yellow-200';
    } else {
      return 'text-red-600 bg-red-50 border-red-200';
    }
  };

  if (loading && !britishIslesOverview) {
    return (
      <div className="flex justify-center items-center h-64">
        <LoadingSpinner size="lg" />
        <span className="ml-2">Loading British Isles compliance dashboard...</span>
      </div>
    );
  }

  return (
    <div className="max-w-7xl mx-auto p-6 space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-2">
            <Globe className="w-8 h-8 text-blue-500" />
            British Isles Compliance Intelligence
          </h1>
          <p className="text-gray-600 mt-1">
            Multi-jurisdictional regulatory compliance across all British Isles territories
          </p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" onClick={() => setShowCulturalCompliance(!showCulturalCompliance)}>
            <Heart className="w-4 h-4 mr-2" />
            {showCulturalCompliance ? 'Hide' : 'Show'} Cultural Compliance
          </Button>
          <Button onClick={generateHarmonizedReport}>
            <Download className="w-4 h-4 mr-2" />
            Harmonized Report
          </Button>
        </div>
      </div>

      {/* British Isles Overview */}
      <Card className="bg-gradient-to-r from-blue-50 via-purple-50 to-green-50">
        <CardContent className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="text-center">
              <Globe className="w-12 h-12 text-blue-500 mx-auto mb-2" />
              <div className="text-3xl font-bold text-blue-600">
                {britishIslesOverview?.totalJurisdictions || 0}
              </div>
              <div className="text-sm text-gray-600">Active Jurisdictions</div>
            </div>
            <div className="text-center">
              <Award className="w-12 h-12 text-green-500 mx-auto mb-2" />
              <div className="text-3xl font-bold text-green-600">
                {(britishIslesOverview?.averageScore || 0).toFixed(1)}%
              </div>
              <div className="text-sm text-gray-600">Average Compliance</div>
            </div>
            <div className="text-center">
              <TrendingUp className="w-12 h-12 text-purple-500 mx-auto mb-2" />
              <div className="text-lg font-bold text-purple-600">
                {britishIslesOverview?.highestPerforming || 'N/A'}
              </div>
              <div className="text-sm text-gray-600">Highest Performing</div>
            </div>
            <div className="text-center">
              <Target className="w-12 h-12 text-orange-500 mx-auto mb-2" />
              <div className="text-lg font-bold text-orange-600">
                {britishIslesOverview?.lowestPerforming || 'N/A'}
              </div>
              <div className="text-sm text-gray-600">Focus Area</div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Jurisdiction Selection */}
      <div className="flex gap-2 border-b border-gray-200 pb-4">
        <Button
          variant={selectedJurisdiction === 'overview' ? 'default' : 'outline'}
          onClick={() => setSelectedJurisdiction('overview')}
          className="flex items-center gap-2"
        >
          <Globe className="w-4 h-4" />
          Overview
        </Button>
        {Object.entries(jurisdictionCompliance || {}).map(([jurisdiction, data]) => (
          <Button
            key={jurisdiction}
            variant={selectedJurisdiction === jurisdiction ? 'default' : 'outline'}
            onClick={() => setSelectedJurisdiction(jurisdiction)}
            className="flex items-center gap-2"
          >
            {getJurisdictionIcon(jurisdiction)}
            {getJurisdictionName(jurisdiction)}
            <Badge className={getRatingColor(data.status)} variant="secondary">
              {data.score.toFixed(0)}%
            </Badge>
          </Button>
        ))}
      </div>

      {/* Overview Dashboard */}
      {selectedJurisdiction === 'overview' && (
        <>
          {/* All Jurisdictions Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
            {Object.entries(jurisdictionCompliance || {}).map(([jurisdiction, data]) => (
              <Card key={jurisdiction} className="hover:shadow-md transition-shadow cursor-pointer">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between mb-3">
                    {getJurisdictionIcon(jurisdiction)}
                    <Badge className={getRatingColor(data.rating)}>
                      {data.rating}
                    </Badge>
                  </div>
                  <h3 className="font-semibold mb-2">{getJurisdictionName(jurisdiction)}</h3>
                  
                  {/* Score Circle */}
                  <div className="relative w-16 h-16 mx-auto mb-3">
                    <svg className="w-16 h-16 transform -rotate-90" viewBox="0 0 36 36">
                      <path
                        className="text-gray-200"
                        stroke="currentColor"
                        strokeWidth="3"
                        fill="none"
                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                      />
                      <path
                        className={data.overallScore >= 90 ? 'text-green-500' : 
                                  data.overallScore >= 75 ? 'text-blue-500' : 
                                  data.overallScore >= 60 ? 'text-yellow-500' : 'text-red-500'}
                        stroke="currentColor"
                        strokeWidth="3"
                        strokeLinecap="round"
                        fill="none"
                        strokeDasharray={`${data.overallScore}, 100`}
                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                      />
                    </svg>
                    <div className="absolute inset-0 flex items-center justify-center">
                      <span className="text-sm font-bold">{data.overallScore.toFixed(0)}%</span>
                    </div>
                  </div>
                  
                  <div className="text-xs text-gray-600 space-y-1">
                    <div className="flex justify-between">
                      <span>Last Inspection:</span>
                      <span>{data.lastInspection?.toLocaleDateString() || 'N/A'}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Next Inspection:</span>
                      <span>{data.nextInspection?.toLocaleDateString() || 'TBD'}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>Compliance Gaps:</span>
                      <span className={data.complianceGaps.length > 0 ? 'text-red-600' : 'text-green-600'}>
                        {data.complianceGaps.length}
                      </span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Cross-Jurisdictional Analysis */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <BarChart3 className="w-5 h-5 text-blue-500" />
                  Cross-Jurisdictional Performance
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ResponsiveContainer width="100%" height={300}>
                  <BarChart data={Object.entries(jurisdictionCompliance || {}).map(([jurisdiction, data]) => ({
                    jurisdiction: getJurisdictionName(jurisdiction).split(' ')[0],
                    score: data.overallScore,
                    gaps: data.complianceGaps.length,
                  }))}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="jurisdiction" />
                    <YAxis domain={[0, 100]} />
                    <Tooltip />
                    <Legend />
                    <Bar dataKey="score" fill="#8884d8" name="Compliance Score %" />
                  </BarChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <TrendingUp className="w-5 h-5 text-green-500" />
                  Harmonized Compliance Trends
                </CardTitle>
              </CardHeader>
              <CardContent>
                <ResponsiveContainer width="100%" height={300}>
                  <LineChart data={complianceTrends}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="date" />
                    <YAxis domain={[70, 100]} />
                    <Tooltip />
                    <Legend />
                    <Line type="monotone" dataKey="england" stroke="#DC2626" strokeWidth={2} name="England (CQC)" />
                    <Line type="monotone" dataKey="scotland" stroke="#2563EB" strokeWidth={2} name="Scotland" />
                    <Line type="monotone" dataKey="wales" stroke="#059669" strokeWidth={2} name="Wales (CIW)" />
                    <Line type="monotone" dataKey="northern_ireland" stroke="#EA580C" strokeWidth={2} name="N. Ireland (RQIA)" />
                    <Line type="monotone" dataKey="jersey" stroke="#7C3AED" strokeWidth={2} name="Jersey" />
                    <Line type="monotone" dataKey="guernsey" stroke="#0D9488" strokeWidth={2} name="Guernsey" />
                    <Line type="monotone" dataKey="isle_of_man" stroke="#4338CA" strokeWidth={2} name="Isle of Man" />
                  </LineChart>
                </ResponsiveContainer>
              </CardContent>
            </Card>
          </div>

          {/* Cross-Jurisdictional Insights */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Brain className="w-5 h-5 text-purple-500" />
                Cross-Jurisdictional Intelligence
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold mb-3 flex items-center gap-2">
                    <AlertTriangle className="w-4 h-4 text-orange-500" />
                    Cross-Jurisdictional Risks
                  </h4>
                  <div className="space-y-2">
                    {britishIslesOverview?.crossJurisdictionalRisks?.map((risk, index) => (
                      <div key={index} className="p-2 border rounded bg-orange-50 border-orange-200">
                        <p className="text-sm text-orange-800">{risk}</p>
                      </div>
                    ))}
                  </div>
                </div>
                
                <div>
                  <h4 className="font-semibold mb-3 flex items-center gap-2">
                    <Target className="w-4 h-4 text-green-500" />
                    Harmonized Recommendations
                  </h4>
                  <div className="space-y-2">
                    {britishIslesOverview?.harmonizedRecommendations?.map((recommendation, index) => (
                      <div key={index} className="p-2 border rounded bg-green-50 border-green-200">
                        <p className="text-sm text-green-800">{recommendation}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Upcoming Inspections */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Calendar className="w-5 h-5 text-blue-500" />
                Upcoming Inspections Across British Isles
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {britishIslesOverview?.nextInspections?.map((inspection, index) => (
                  <div key={index} className="border rounded-lg p-3 hover:shadow-sm">
                    <div className="flex items-center justify-between mb-2">
                      {getJurisdictionIcon(inspection.jurisdiction)}
                      <Badge variant={inspection.daysUntil <= 30 ? 'destructive' : 'outline'}>
                        {inspection.daysUntil} days
                      </Badge>
                    </div>
                    <h4 className="font-semibold">{getJurisdictionName(inspection.jurisdiction)}</h4>
                    <p className="text-sm text-gray-600">
                      {inspection.date.toLocaleDateString()}
                    </p>
                    <Button size="sm" variant="outline" className="w-full mt-2">
                      <Eye className="w-3 h-3 mr-1" />
                      Prepare
                    </Button>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </>
      )}

      {/* Individual Jurisdiction Views */}
      {selectedJurisdiction !== 'overview' && jurisdictionCompliance?.[selectedJurisdiction] && (
        <div className="space-y-6">
          {/* Jurisdiction Header */}
          <Card className="bg-gradient-to-r from-blue-50 to-purple-50">
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-4">
                  {getJurisdictionIcon(selectedJurisdiction)}
                  <div>
                    <h2 className="text-2xl font-bold text-gray-900">
                      {getJurisdictionName(selectedJurisdiction)}
                    </h2>
                    <p className="text-gray-600">
                      Regulatory Body: {jurisdictionCompliance[selectedJurisdiction].regulatoryBody}
                    </p>
                  </div>
                </div>
                <div className="text-center">
                  <div className="text-4xl font-bold text-blue-600 mb-2">
                    {jurisdictionCompliance[selectedJurisdiction].overallScore.toFixed(1)}%
                  </div>
                  <Badge className={`text-lg px-3 py-1 ${getRatingColor(jurisdictionCompliance[selectedJurisdiction].rating)}`}>
                    {jurisdictionCompliance[selectedJurisdiction].rating}
                  </Badge>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Jurisdiction-Specific Domains */}
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {Object.entries(jurisdictionCompliance[selectedJurisdiction].domainScores).map(([domain, score]) => (
              <Card key={domain} className="text-center">
                <CardContent className="p-4">
                  <div className="w-12 h-12 mx-auto mb-2 relative">
                    <svg className="w-12 h-12 transform -rotate-90" viewBox="0 0 36 36">
                      <path
                        className="text-gray-200"
                        stroke="currentColor"
                        strokeWidth="3"
                        fill="none"
                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                      />
                      <path
                        className={score >= 90 ? 'text-green-500' : 
                                  score >= 75 ? 'text-blue-500' : 
                                  score >= 60 ? 'text-yellow-500' : 'text-red-500'}
                        stroke="currentColor"
                        strokeWidth="3"
                        strokeLinecap="round"
                        fill="none"
                        strokeDasharray={`${score}, 100`}
                        d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                      />
                    </svg>
                    <div className="absolute inset-0 flex items-center justify-center">
                      <span className="text-sm font-bold">{score.toFixed(0)}%</span>
                    </div>
                  </div>
                  <h4 className="font-medium text-sm capitalize">
                    {domain.replace(/_/g, ' ')}
                  </h4>
                  <Badge 
                    variant="outline" 
                    className={`text-xs mt-1 ${
                      score >= 90 ? 'text-green-600' : 
                      score >= 75 ? 'text-blue-600' : 
                      score >= 60 ? 'text-yellow-600' : 'text-red-600'
                    }`}
                  >
                    {score >= 90 ? 'Excellent' : 
                     score >= 75 ? 'Good' : 
                     score >= 60 ? 'Satisfactory' : 'Needs Improvement'}
                  </Badge>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Cultural Compliance (for relevant jurisdictions) */}
          {showCulturalCompliance && 
           ['wales', 'scotland', 'jersey', 'guernsey', 'isle_of_man'].includes(selectedJurisdiction) && (
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Heart className="w-5 h-5 text-pink-500" />
                  Cultural Heritage Compliance
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  {selectedJurisdiction === 'wales' && (
                    <>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-green-600">94%</div>
                        <div className="text-sm text-gray-600">Welsh Language</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-blue-600">89%</div>
                        <div className="text-sm text-gray-600">Cultural Events</div>
                      </div>
                    </>
                  )}
                  {selectedJurisdiction === 'scotland' && (
                    <>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-green-600">91%</div>
                        <div className="text-sm text-gray-600">Gaelic Heritage</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-blue-600">87%</div>
                        <div className="text-sm text-gray-600">Highland Culture</div>
                      </div>
                    </>
                  )}
                  {selectedJurisdiction === 'isle_of_man' && (
                    <>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-purple-600">78%</div>
                        <div className="text-sm text-gray-600">Manx Gaelic</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-green-600">92%</div>
                        <div className="text-sm text-gray-600">Community Links</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-blue-600">88%</div>
                        <div className="text-sm text-gray-600">Manx Heritage</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-orange-600">84%</div>
                        <div className="text-sm text-gray-600">Traditional Foods</div>
                      </div>
                    </>
                  )}
                  {selectedJurisdiction === 'jersey' && (
                    <>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-green-600">90%</div>
                        <div className="text-sm text-gray-600">Jersey Heritage</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-blue-600">86%</div>
                        <div className="text-sm text-gray-600">Community Links</div>
                      </div>
                    </>
                  )}
                  {selectedJurisdiction === 'guernsey' && (
                    <>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-green-600">93%</div>
                        <div className="text-sm text-gray-600">Environmental</div>
                      </div>
                      <div className="text-center p-3 border rounded-lg">
                        <div className="text-xl font-bold text-blue-600">88%</div>
                        <div className="text-sm text-gray-600">Cultural Heritage</div>
                      </div>
                    </>
                  )}
                </div>
              </CardContent>
            </Card>
          )}

          {/* Jurisdiction-Specific Actions */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <div className="lg:col-span-2">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Target className="w-5 h-5 text-blue-500" />
                    {getJurisdictionName(selectedJurisdiction)} Specific Actions
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {jurisdictionCompliance[selectedJurisdiction].complianceGaps.length > 0 && (
                      <div>
                        <h4 className="font-medium mb-2 text-red-700">Compliance Gaps to Address:</h4>
                        <div className="space-y-2">
                          {jurisdictionCompliance[selectedJurisdiction].complianceGaps.map((gap, index) => (
                            <div key={index} className="p-2 border rounded bg-red-50 border-red-200">
                              <p className="text-sm text-red-800">{gap}</p>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                    
                    <div>
                      <h4 className="font-medium mb-2 text-blue-700">Recommendations:</h4>
                      <div className="space-y-2">
                        {jurisdictionCompliance[selectedJurisdiction].recommendations.map((recommendation, index) => (
                          <div key={index} className="p-2 border rounded bg-blue-50 border-blue-200">
                            <p className="text-sm text-blue-800">{recommendation}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            <div className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Quick Actions</CardTitle>
                </CardHeader>
                <CardContent className="space-y-2">
                  <Button className="w-full justify-start" variant="outline">
                    <FileText className="w-4 h-4 mr-2" />
                    Generate Report
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Calendar className="w-4 h-4 mr-2" />
                    Schedule Review
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Eye className="w-4 h-4 mr-2" />
                    Inspection Prep
                  </Button>
                  <Button className="w-full justify-start" variant="outline">
                    <Bell className="w-4 h-4 mr-2" />
                    Set Alerts
                  </Button>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">Regulatory Updates</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    {regulatoryUpdates?.filter(update => 
                      update.jurisdiction === selectedJurisdiction
                    ).slice(0, 3).map((update, index) => (
                      <div key={index} className="border-l-4 border-blue-500 pl-3 py-2">
                        <h4 className="font-medium text-sm">{update.title}</h4>
                        <p className="text-xs text-gray-600">{update.summary}</p>
                        <p className="text-xs text-gray-500 mt-1">
                          Effective: {update.effectiveDate.toLocaleDateString()}
                        </p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      )}

      {/* Regulatory Intelligence Summary */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Brain className="w-5 h-5 text-purple-500" />
            British Isles Regulatory Intelligence Summary
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="bg-blue-50 p-4 rounded-lg">
            <h4 className="font-bold text-blue-800 mb-2">AI Multi-Jurisdictional Analysis</h4>
            <p className="text-sm text-blue-700 mb-3">
              Our AI analysis across all British Isles jurisdictions shows strong performance with 
              <strong> average {(britishIslesOverview?.averageScore || 0).toFixed(1)}% compliance</strong>. 
              The system identifies opportunities for harmonization and best practice sharing across territories.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="text-center p-2 bg-white rounded">
                <div className="text-lg font-bold text-green-600">
                  {Object.keys(jurisdictionCompliance || {}).filter(j => 
                    jurisdictionCompliance[j].overallScore >= 90
                  ).length}
                </div>
                <div className="text-xs text-gray-600">Excellent Ratings</div>
              </div>
              <div className="text-center p-2 bg-white rounded">
                <div className="text-lg font-bold text-blue-600">
                  {Object.values(jurisdictionCompliance || {}).reduce((sum, j) => 
                    sum + j.complianceGaps.length, 0
                  )}
                </div>
                <div className="text-xs text-gray-600">Total Gaps</div>
              </div>
              <div className="text-center p-2 bg-white rounded">
                <div className="text-lg font-bold text-purple-600">
                  {britishIslesOverview?.nextInspections?.filter(i => i.daysUntil <= 90).length || 0}
                </div>
                <div className="text-xs text-gray-600">Inspections (90 days)</div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};