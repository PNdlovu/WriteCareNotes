openapi: 3.0.3
info:
  title: HR Verification API
  description: API for managing HR verification processes including DBS, Right to Work, and DVLA checks
  version: 1.0.0
  contact:
    name: WriteCareNotes Team
    email: support@writecarenotes.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.writecarenotes.com/v1
    description: Production server
  - url: https://staging-api.writecarenotes.com/v1
    description: Staging server
  - url: http://localhost:3000/api
    description: Development server

security:
  - bearerAuth: []

paths:
  /hr/dbs:
    post:
      summary: Create DBS Verification
      description: Create a new DBS verification request for an employee
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DBSVerificationRequest'
            example:
              employeeId: "emp-001"
              employeeName: "John Smith"
              verificationType: "enhanced"
              priority: "high"
              careHomeId: "care-home-001"
              department: "nursing"
              costCenter: "nursing-001"
              notes: "New employee verification"
      responses:
        '201':
          description: DBS verification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

    get:
      summary: Search DBS Verifications
      description: Search DBS verifications with optional filters
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by verification status
          schema:
            type: string
            enum: [not_started, application_submitted, under_review, in_progress, completed, cleared, barred, rejected, expired, cancelled]
        - name: verificationType
          in: query
          description: Filter by verification type
          schema:
            type: string
            enum: [basic, standard, enhanced]
        - name: priority
          in: query
          description: Filter by priority level
          schema:
            type: string
            enum: [low, medium, high, urgent]
        - name: careHomeId
          in: query
          description: Filter by care home ID
          schema:
            type: string
        - name: department
          in: query
          description: Filter by department
          schema:
            type: string
        - name: costCenter
          in: query
          description: Filter by cost center
          schema:
            type: string
        - name: employeeId
          in: query
          description: Filter by employee ID
          schema:
            type: string
        - name: startDate
          in: query
          description: Filter by start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter by end date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Maximum number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: DBS verifications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationListResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/{verificationId}:
    get:
      summary: Get DBS Verification by ID
      description: Retrieve a specific DBS verification by its ID
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      responses:
        '200':
          description: DBS verification retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

    put:
      summary: Update DBS Verification
      description: Update an existing DBS verification
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DBSVerificationUpdateRequest'
      responses:
        '200':
          description: DBS verification updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

    delete:
      summary: Delete DBS Verification
      description: Delete a DBS verification (soft delete)
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      responses:
        '200':
          description: DBS verification deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Bad request - Cannot delete verification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/{verificationId}/start-application:
    post:
      summary: Start DBS Application
      description: Start the DBS application process
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationReference
              properties:
                applicationReference:
                  type: string
                  description: DBS application reference number
                  example: "DBS-APP-001"
      responses:
        '200':
          description: DBS application started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid status or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/{verificationId}/submit-application:
    post:
      summary: Submit DBS Application
      description: Submit the DBS application for processing
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dbsReferenceNumber
              properties:
                dbsReferenceNumber:
                  type: string
                  description: DBS reference number from the application
                  example: "DBS123456789"
      responses:
        '200':
          description: DBS application submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid status or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/{verificationId}/complete:
    post:
      summary: Complete DBS Verification
      description: Mark DBS verification as completed with results
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificateNumber
                - isCleared
              properties:
                certificateNumber:
                  type: string
                  description: DBS certificate number
                  example: "CERT-001"
                isCleared:
                  type: boolean
                  description: Whether the DBS check was cleared
                  example: true
                notes:
                  type: string
                  description: Additional verification notes
                  example: "Clear - no issues found"
      responses:
        '200':
          description: DBS verification completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid status or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/{verificationId}/reject:
    post:
      summary: Reject DBS Verification
      description: Reject DBS verification with reason
      tags:
        - DBS Verification
      security:
        - bearerAuth: []
      parameters:
        - name: verificationId
          in: path
          required: true
          description: Unique identifier for the DBS verification
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for rejection
                  example: "Incomplete documentation"
      responses:
        '200':
          description: DBS verification rejected successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSVerificationResponse'
        '400':
          description: Bad request - Invalid status or missing data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: DBS verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

  /hr/dbs/reports/compliance:
    get:
      summary: Get DBS Compliance Report
      description: Generate DBS compliance report for a care home
      tags:
        - DBS Verification
        - Reports
      security:
        - bearerAuth: []
      parameters:
        - name: careHomeId
          in: query
          description: Care home ID to generate report for
          schema:
            type: string
        - name: startDate
          in: query
          description: Report start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Report end date (ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: DBS compliance report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBSComplianceReportResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    DBSVerificationRequest:
      type: object
      required:
        - employeeId
        - employeeName
        - verificationType
        - priority
      properties:
        employeeId:
          type: string
          description: Unique identifier for the employee
          example: "emp-001"
        employeeName:
          type: string
          description: Full name of the employee
          example: "John Smith"
        verificationType:
          type: string
          enum: [basic, standard, enhanced]
          description: Type of DBS verification
          example: "enhanced"
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Priority level for the verification
          example: "high"
        careHomeId:
          type: string
          description: Care home identifier
          example: "care-home-001"
        department:
          type: string
          description: Employee department
          example: "nursing"
        costCenter:
          type: string
          description: Cost center code
          example: "nursing-001"
        notes:
          type: string
          description: Additional notes
          example: "New employee verification"

    DBSVerificationUpdateRequest:
      type: object
      properties:
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Priority level for the verification
        notes:
          type: string
          description: Additional notes
        verificationNotes:
          type: string
          description: Verification-specific notes

    DBSVerification:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the DBS verification
          example: "dbs-001"
        employeeId:
          type: string
          description: Unique identifier for the employee
          example: "emp-001"
        employeeName:
          type: string
          description: Full name of the employee
          example: "John Smith"
        status:
          type: string
          enum: [not_started, application_submitted, under_review, in_progress, completed, cleared, barred, rejected, expired, cancelled]
          description: Current status of the verification
          example: "completed"
        verificationType:
          type: string
          enum: [basic, standard, enhanced]
          description: Type of DBS verification
          example: "enhanced"
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Priority level for the verification
          example: "high"
        applicationReference:
          type: string
          description: DBS application reference number
          example: "DBS-APP-001"
        dbsReferenceNumber:
          type: string
          description: DBS reference number
          example: "DBS123456789"
        certificateNumber:
          type: string
          description: DBS certificate number
          example: "CERT-001"
        applicationDate:
          type: string
          format: date-time
          description: Date when application was submitted
          example: "2024-01-15T10:00:00Z"
        submissionDate:
          type: string
          format: date-time
          description: Date when application was submitted to DBS
          example: "2024-01-16T09:00:00Z"
        completionDate:
          type: string
          format: date-time
          description: Date when verification was completed
          example: "2024-01-25T14:30:00Z"
        expiryDate:
          type: string
          format: date-time
          description: Date when verification expires
          example: "2027-01-25T23:59:59Z"
        verificationNotes:
          type: string
          description: Notes from the verification process
          example: "Clear - no issues found"
        complianceStatus:
          type: string
          enum: [compliant, non_compliant, pending, expired]
          description: Compliance status
          example: "compliant"
        riskAssessment:
          type: string
          enum: [low, medium, high]
          description: Risk assessment level
          example: "low"
        careHomeId:
          type: string
          description: Care home identifier
          example: "care-home-001"
        department:
          type: string
          description: Employee department
          example: "nursing"
        costCenter:
          type: string
          description: Cost center code
          example: "nursing-001"
        notes:
          type: string
          description: Additional notes
          example: "New employee verification"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-15T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-25T14:30:00Z"

    DBSVerificationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "DBS verification retrieved successfully"
        data:
          $ref: '#/components/schemas/DBSVerification'

    DBSVerificationListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/DBSVerification'
        count:
          type: integer
          description: Total number of verifications returned
          example: 25

    DBSComplianceReport:
      type: object
      properties:
        totalVerifications:
          type: integer
          description: Total number of DBS verifications
          example: 100
        compliantVerifications:
          type: integer
          description: Number of compliant verifications
          example: 85
        nonCompliantVerifications:
          type: integer
          description: Number of non-compliant verifications
          example: 15
        complianceRate:
          type: number
          format: float
          description: Compliance rate as percentage
          example: 85.0
        expiringVerifications:
          type: integer
          description: Number of verifications expiring within 30 days
          example: 5
        expiredVerifications:
          type: integer
          description: Number of expired verifications
          example: 2
        verificationsByStatus:
          type: object
          additionalProperties:
            type: integer
          description: Count of verifications by status
          example:
            completed: 80
            in_progress: 15
            expired: 5
        verificationsByType:
          type: object
          additionalProperties:
            type: integer
          description: Count of verifications by type
          example:
            enhanced: 60
            standard: 30
            basic: 10

    DBSComplianceReportResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/DBSComplianceReport'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Error message
          example: "DBS verification not found"
        error:
          type: string
          description: Error code
          example: "NOT_FOUND"

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          description: Success message
          example: "DBS verification deleted successfully"