# Production Dockerfile for WriteCareConnect
FROM node:18-alpine AS base

# Install security updates
RUN apk update && apk upgrade && apk add --no-cache dumb-init

# Create app directory and user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S writecare -u 1001
WORKDIR /app
RUN chown writecare:nodejs /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install dependencies
FROM base AS dependencies
RUN npm ci --only=production && npm cache clean --force

# Build stage
FROM base AS build
COPY --from=dependencies /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install security updates and runtime dependencies
RUN apk update && apk upgrade && apk add --no-cache dumb-init curl

# Create app directory and user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S writecare -u 1001
WORKDIR /app
RUN chown writecare:nodejs /app

# Copy built application
COPY --from=dependencies --chown=writecare:nodejs /app/node_modules ./node_modules
COPY --from=build --chown=writecare:nodejs /app/dist ./dist
COPY --from=build --chown=writecare:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p logs uploads && chown writecare:nodejs logs uploads

# Switch to non-root user
USER writecare

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Expose port
EXPOSE 3000

# Start application with dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/server.js"]

# Labels for metadata
LABEL maintainer="WriteCareConnect Team" \
      version="1.0.0" \
      description="WriteCareConnect healthcare communication platform" \
      org.opencontainers.image.source="https://github.com/writecarenotes/writecare-connect"