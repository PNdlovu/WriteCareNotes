apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    /* Folders */
    root = file("../")
    reactNativeDir = file("../../node_modules/react-native")
    codegenDir = file("../../node_modules/@react-native/codegen")
    cliFile = file("../../node_modules/@react-native/cli/build/bin.js")

    /* Variants */
    debuggableVariants = ["liveDebug", "stagingDebug"]

    /* Bundling */
    bundleCommand = "ram-bundle"
    bundleInDebug = false
    bundleInRelease = true
    bundleInStaging = true

    /* Hermes Options */
    enableHermes = true
    hermesCommand = "../../node_modules/hermes-engine/osx-bin/hermesc"
    enableHermesInDebug = true
    enableHermesInRelease = true

    /* Proguard */
    enableProguardInReleaseBuilds = true
    proguardFiles = [getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"]
}

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.writecarenotes.mobile"
    defaultConfig {
        applicationId "com.writecarenotes.mobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        // Healthcare app specific
        multiDexEnabled true
        
        // Biometric authentication
        buildConfigField "boolean", "BIOMETRIC_ENABLED", "true"
        
        // Security configurations
        buildConfigField "String", "API_BASE_URL", '"https://api.writecarenotes.com"'
        buildConfigField "boolean", "CERTIFICATE_PINNING_ENABLED", "true"
        
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            
            buildConfigField "String", "BUILD_TYPE", '"debug"'
            buildConfigField "boolean", "LOGGING_ENABLED", "true"
        }
        
        staging {
            signingConfig signingConfigs.release
            applicationIdSuffix ".staging"
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            
            buildConfigField "String", "BUILD_TYPE", '"staging"'
            buildConfigField "boolean", "LOGGING_ENABLED", "true"
            buildConfigField "String", "API_BASE_URL", '"https://staging-api.writecarenotes.com"'
        }
        
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            
            buildConfigField "String", "BUILD_TYPE", '"release"'
            buildConfigField "boolean", "LOGGING_ENABLED", "false"
        }
    }

    flavorDimensions "default"
    productFlavors {
        production {
            dimension "default"
            applicationId "com.writecarenotes.mobile"
            versionNameSuffix ""
        }
        
        enterprise {
            dimension "default"
            applicationId "com.writecarenotes.enterprise"
            versionNameSuffix "-enterprise"
            buildConfigField "boolean", "ENTERPRISE_FEATURES", "true"
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }

    // Security configurations
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    // Healthcare compliance
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    
    // React Native
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging'
    
    // Security
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    
    // Healthcare specific
    implementation 'androidx.work:work-runtime:2.8.1'
    implementation 'androidx.health.connect:connect-client:1.0.0-alpha07'
    
    // Camera and file handling
    implementation 'androidx.camera:camera-camera2:1.3.1'
    implementation 'androidx.camera:camera-lifecycle:1.3.1'
    implementation 'androidx.camera:camera-view:1.3.1'
    
    // PDF and document handling
    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
    
    // Networking and security
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    // Testing
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)